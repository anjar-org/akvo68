name: Deploy to Test Cluster

on:
  push:
    branches:
      - main

concurrency:
  group: deploy-to-test
  cancel-in-progress: false


jobs:
  run-tests:
    name: Run Tests
    uses: ./.github/workflows/test-reusable.yml # Calls the reusable test workflow
    secrets: inherit

  build-push:
    name: Build and Push to Registry
    runs-on: ubuntu-latest
    needs: run-tests
    environment: Test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: src

      - name: Checkout Akvo composite actions
        uses: actions/checkout@v4
        with:
          repository: akvo/composite-actions
          path: composite-actions
          ref: 0.0.10

      - name: Prepare Frontend Build
        run: |
          echo 'WEBDOMAIN=${{ secrets.WEBDOMAIN }}' >> src/frontend/.env
          echo 'NEXT_AUTH_SECRET_KEY=${{ secrets.NEXT_AUTH_SECRET_KEY }}' >> src/frontend/.env
        shell: bash

      - name: Node Operations
        uses: ./composite-actions/.github/actions/node-operation
        with:
          node-version: "18"
          node-command: "yarn install --no-progress --frozen-lock && yarn build"

      - name: Docker Build Nginx
        uses: ./composite-actions/.github/actions/docker-build
        with:
          app-name: "akvo68"
          service-name: "nginx"
          dockerfile-location: "nginx"
          cluster-name: "test"

      - name: Docker Build Frontend
        uses: ./composite-actions/.github/actions/docker-build
        with:
          app-name: "akvo68"
          service-name: "frontend"
          dockerfile-location: "frontend"
          cluster-name: "test"

      - name: Docker Build Backend
        uses: ./composite-actions/.github/actions/docker-build
        with:
          app-name: "akvo68"
          service-name: "backend"
          dockerfile-location: "backend"
          cluster-name: "test"

      - name: Docker Push Nginx
        uses: ./composite-actions/.github/actions/docker-push
        with:
          app-name: "akvo68"
          service-name: "nginx"
          gcloud-sa:  ${{ secrets.GCLOUD_SERVICE_ACCOUNT_REGISTRY }}
          cluster-name: "test"

      - name: Docker Push Frontend
        uses: ./composite-actions/.github/actions/docker-push
        with:
          app-name: "akvo68"
          service-name: "frontend"
          gcloud-sa:  ${{ secrets.GCLOUD_SERVICE_ACCOUNT_REGISTRY }}
          cluster-name: "test"

      - name: Docker Push Backend
        uses: ./composite-actions/.github/actions/docker-push
        with:
          app-name: "akvo68"
          service-name: "backend"
          gcloud-sa:  ${{ secrets.GCLOUD_SERVICE_ACCOUNT_REGISTRY }}
          cluster-name: "test"

  rollout:
    name: Rollout to the server
    needs: build-push
    runs-on: ubuntu-latest
    environment: Test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: src

      - name: Checkout Akvo composite actions
        uses: actions/checkout@v4
        with:
          repository: akvo/composite-actions
          path: composite-actions
          ref: 0.0.10

      - name: Rollout Nginx
        uses: ./composite-actions/.github/actions/k8s-rollout
        with:
          app-name: "akvo68"
          deployment-name: "nginx-deployment"
          container-name: "nginx"
          cluster-name: "test"
          namespace-name: "akvo68-namespace"
          gcloud-sa:  ${{ secrets.GCLOUD_SERVICE_ACCOUNT_K8S }}

      - name: Rollout Frontend
        uses: ./composite-actions/.github/actions/k8s-rollout
        with:
          app-name: "akvo68"
          deployment-name: "frontend-deployment"
          container-name: "frontend"
          cluster-name: "test"
          namespace-name: "akvo68-namespace"
          gcloud-sa:  ${{ secrets.GCLOUD_SERVICE_ACCOUNT_K8S }}

      - name: Rollout Backend
        uses: ./composite-actions/.github/actions/k8s-rollout
        with:
          app-name: "akvo68"
          deployment-name: "backend-deployment"
          container-name: "backend"
          cluster-name: "test"
          namespace-name: "akvo68-namespace"
          gcloud-sa:  ${{ secrets.GCLOUD_SERVICE_ACCOUNT_K8S }}